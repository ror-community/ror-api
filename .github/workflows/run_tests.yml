name: Run tests
on:
  workflow_dispatch:
  push:
    branches:
      - 'enable-tests'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ELASTIC_PASSWORD: "changeme"
      ELASTIC7_HOST: "localhost"
      ELASTIC7_PORT: "9200"
      DB_HOST: 127.0.0.1
      # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      LAUNCH_DARKLY_KEY: ${{ secrets.LAUNCH_DARKLY_KEY_DEV }}
    services:
      elasticsearch7:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms512m -Xmx512m
          ELASTIC_PASSWORD: changeme
          xpack.security.enabled: "false"
          http.cors.enabled: "true"
          http.cors.allow-origin: "*"
        ports:
          - 9200:9200
      db:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: "rorapi"
          MYSQL_USER: "ror_user"
          MYSQL_PASSWORD: "password"
          MYSQL_ROOT_PASSWORD: "password"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout ror-api code
        uses: actions/checkout@v2
        with:
          path: ror-api
      - name: Checkout ror-data-test
        uses: actions/checkout@v2
        with:
          repository: ror-community/ror-data-test
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: ror-data-test
      - name: Get last data dump name
        working-directory: ./ror-data-test
        run: |
          FILE="$(ls -Art *.zip | tail -n 1)"
          echo ${FILE%.*}
          echo "LATEST_DUMP_FILE=${FILE%.*}" >> $GITHUB_ENV
      # - name: Cache dependency
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-
      - name: Set up Python environment
        uses: actions/setup-python@v6
        with:
          python-version: "3.8"
          cache: "pip"
      - name: Install requirements
        working-directory: ./ror-api
        run: |
          # python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install yapf

          python manage.py collectstatic --noinput
      - name: Setup
        working-directory: ./ror-api
        run: |
          python manage.py setup v1.55-2024-10-31-ror-data -t
          # Dump file temp hard coded for v2.1 release
          # Pulled from ror-data-test per settings.py config
      - name: Test
        working-directory: ./ror-api
        run: |
          python manage.py test rorapi.tests.tests_unit
          # TODO fix these tests running in GitHub Action
          # python manage.py test rorapi.tests_integration
          # python manage.py test rorapi.tests_functional
